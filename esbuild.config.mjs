/*
 * @Author: Creling
 * @Date: 2022-08-26 11:29:12
 * @LastEditors: Creling
 * @LastEditTime: 2022-08-26 11:48:06
 * @Description: file content
 */
import esbuild from "esbuild";
import process from "process";
import builtins from "builtin-modules";
import copyStaticFiles from "esbuild-copy-static-files";
import fs from "fs";

const banner = `/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/
`;

const prod = process.argv[2] === "production";

// 获取项目ID（假设 manifest.json 中有 "id" 字段）
const manifest = JSON.parse(fs.readFileSync("./manifest.json", "utf-8"));
const pluginId = manifest.id;

// 路径模板
const devPluginPath = `./test_vault/.obsidian/plugins/${pluginId}`;
const buildPluginPath = `/Users/wang/Library/Mobile Documents/iCloud~md~obsidian/Documents/Base/.obsidian/plugins/${pluginId}`;

// esbuild 配置
esbuild
	.build({
		banner: {
			js: banner,
		},
		entryPoints: ["./src/main.ts"],
		bundle: true,
		external: [
			"obsidian",
			"electron",
			"@codemirror/autocomplete",
			"@codemirror/collab",
			"@codemirror/commands",
			"@codemirror/language",
			"@codemirror/lint",
			"@codemirror/search",
			"@codemirror/state",
			"@codemirror/view",
			"@lezer/common",
			"@lezer/highlight",
			"@lezer/lr",
			...builtins,
		],
		format: "cjs",
		watch: !prod,
		target: "es2018",
		logLevel: "info",
		sourcemap: prod ? false : "inline",
		treeShaking: true,
		outdir: "./dist",
		plugins: [
			copyStaticFiles({
				src: "./manifest.json",
				dest: prod
					? `${buildPluginPath}/manifest.json`
					: `${devPluginPath}/manifest.json`,
			}),
			copyStaticFiles({
				src: "./dist/main.js",
				dest: prod
					? `${buildPluginPath}/manifest.json`
					: `${devPluginPath}/manifest.json`,
				filter: () => !prod,
				force: true,
			}),
		],
	})
	.catch(() => process.exit(1));
